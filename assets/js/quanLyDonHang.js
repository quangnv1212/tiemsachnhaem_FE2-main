// H√†m ti·ªán √≠ch ƒë·ªÉ t√¨m ph·∫ßn t·ª≠ ch·ª©a vƒÉn b·∫£n ch√≠nh x√°c
HTMLElement.prototype.contains = function (text) {
  return this.textContent.trim() === text;
};

let ordersData = []; // Bi·∫øn to√†n c·ª•c ƒë·ªÉ l∆∞u d·ªØ li·ªáu t·ª´ API

// H√†m g·ªçi API ƒë·ªÉ l·∫•y t·∫•t c·∫£ ƒë∆°n h√†ng (GET /orders)
async function fetchOrders() {
  try {
    const response = await fetch(
      "https://tiemsachnhaem-be-mu.vercel.app/api/orders",
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          // Th√™m token n·∫øu c·∫ßn
          // 'Authorization': 'Bearer your-token-here'
        },
      }
    );

    if (!response.ok) {
      throw new Error(
        `L·ªói khi g·ªçi API: ${response.status} - ${response.statusText}`
      );
    }

    const data = await response.json();
    console.log("D·ªØ li·ªáu orders t·ª´ API:", data);
    
    // S·∫Øp x·∫øp ƒë∆°n h√†ng t·ª´ m·ªõi ƒë·∫øn c≈©
    ordersData = data.sort((a, b) => {
      const dateA = new Date(a.orderInfo?.orderDate || a.orderInfo?.createdAt || a.createdAt);
      const dateB = new Date(b.orderInfo?.orderDate || b.orderInfo?.createdAt || b.createdAt);
      return dateB - dateA; // S·∫Øp x·∫øp gi·∫£m d·∫ßn (m·ªõi nh·∫•t l√™n ƒë·∫ßu)
    });
    
    renderOrdersTable(); // C·∫≠p nh·∫≠t b·∫£ng v·ªõi d·ªØ li·ªáu API
  } catch (error) {
    console.error("L·ªói khi l·∫•y d·ªØ li·ªáu t·ª´ API:", error);
    // N·∫øu API th·∫•t b·∫°i, gi·ªØ nguy√™n d·ªØ li·ªáu m·∫´u
    ordersData = [
      {
        id: "68386a8a255efda73f31c105",
        customerInfo: { name: "Test A", email: "testmail@mail.com" },
        orderInfo: {
          createdAt: "2025-05-29T14:09:14.492Z",
          totalAmount: 490000,
          status: "pending",
        },
      },
      {
        id: "68386b98ce25038722ba6a1e",
        customerInfo: { name: "Nguy√™n", email: "pthainguyen.id@gmail.com" },
        orderInfo: {
          createdAt: "2025-05-29T14:13:44.134Z",
          totalAmount: 490000,
          status: "pending",
        },
      },
    ];
    
    // S·∫Øp x·∫øp d·ªØ li·ªáu m·∫´u t·ª´ m·ªõi ƒë·∫øn c≈©
    ordersData = ordersData.sort((a, b) => {
      const dateA = new Date(a.orderInfo?.orderDate || a.orderInfo?.createdAt || a.createdAt);
      const dateB = new Date(b.orderInfo?.orderDate || b.orderInfo?.createdAt || b.createdAt);
      return dateB - dateA; // S·∫Øp x·∫øp gi·∫£m d·∫ßn (m·ªõi nh·∫•t l√™n ƒë·∫ßu)
    });
    
    renderOrdersTable(); // S·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u
  }
}

// H√†m hi·ªÉn th·ªã d·ªØ li·ªáu l√™n b·∫£ng
function renderOrdersTable() {
  const tbody = document.getElementById("ordersTableBody");
  const statusText = {
    unresolved: "Ch∆∞a gi·∫£i quy·∫øt",
    pending: "ƒêang x·ª≠ l√Ω",
    shipping: "ƒêang giao",
    delivered: "ƒê√£ giao",
    cancelled: "ƒê√£ h·ªßy",
  };

  tbody.innerHTML = ordersData
    .map((order) => {
      // X√°c ƒë·ªãnh d·ªØ li·ªáu t·ª´ c·∫•u tr√∫c m·ªõi ho·∫∑c c≈©
      const customerName =
        order.customerInfo?.name || order.customerName || "Kh√¥ng x√°c ƒë·ªãnh";
      const customerEmail =
        order.customerInfo?.email || order.customerEmail || "Ch∆∞a c√≥ email";
      const createdAt =
        order.orderInfo?.orderDate ||
        order.orderInfo?.createdAt ||
        order.createdAt;
      const totalAmount =
        order.orderInfo?.totalAmount || order.totalAmount || 0;
      const status = order.orderInfo?.status || order.status || "pending";

      return `
    <tr>
      <td>#${order.id.slice(-5)}</td>
      <td>
        <strong>${customerName}</strong><br>
        <small class="text-muted">${customerEmail}</small>
      </td>
      <td>${new Date(createdAt).toLocaleDateString("vi-VN")}</td>
      <td>${totalAmount.toLocaleString("vi-VN")}‚Ç´</td>
      <td><span class="badge rounded-pill status-${status} text-black" id="status${order.id.slice(
        -5
      )}">${statusText[status] || "N/A"}</span></td>
      <td>
        <button class="btn btn-outline-primary btn-sm" onclick="showOrderDetail('${
          order.id
        }')">üëÅÔ∏è Chi ti·∫øt</button>
      </td>
    </tr>
  `;
    })
    .join("");
}

// H√†m l·∫•y chi ti·∫øt ƒë∆°n h√†ng (GET /orders/{id})
async function showOrderDetail(orderId) {
  try {
    // Hi·ªÉn th·ªã modal ngay l·∫≠p t·ª©c ƒë·ªÉ ng∆∞·ªùi d√πng kh√¥ng ph·∫£i ƒë·ª£i
    const myModal = new bootstrap.Modal(document.getElementById("orderModal"));
    myModal.show();

    // Hi·ªÉn th·ªã th√¥ng b√°o ƒëang t·∫£i
    document.getElementById("orderCustomer").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderEmail").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderPhone").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderAddress").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderDate").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderTotal").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderStatus").textContent = "ƒêang t·∫£i...";
    document.getElementById("orderProducts").innerHTML =
      '<tr><td colspan="3">ƒêang t·∫£i th√¥ng tin s·∫£n ph·∫©m...</td></tr>';

    // G·ªçi API GET /orders/{id}
    const response = await fetch(
      `https://tiemsachnhaem-be-mu.vercel.app/api/orders/${orderId}`,
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          // Th√™m token n·∫øu c·∫ßn
          // 'Authorization': 'Bearer your-token-here'
        },
      }
    );

    if (!response.ok) {
      throw new Error(
        `L·ªói khi g·ªçi API: ${response.status} - ${response.statusText}`
      );
    }

    const order = await response.json();
    console.log("Received order data:", order); // Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c

    // Hi·ªÉn th·ªã d·ªØ li·ªáu t·ª´ API v·ªõi c·∫•u tr√∫c m·ªõi
    document.getElementById("orderCode").textContent = `#${order.id.slice(-5)}`;

    // Th√¥ng tin kh√°ch h√†ng
    document.getElementById("orderCustomer").textContent =
      order.customerInfo?.name || "Kh√¥ng x√°c ƒë·ªãnh";
    document.getElementById("orderEmail").textContent =
      order.customerInfo?.email || "Ch∆∞a c√≥ email";
    document.getElementById("orderPhone").textContent =
      order.customerInfo?.phoneNumber || "Ch∆∞a c√≥ s·ªë ƒëi·ªán tho·∫°i";
    document.getElementById("orderAddress").textContent =
      order.orderInfo?.shippingAddress ||
      order.customerInfo?.address ||
      "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ";

    // Th√¥ng tin ƒë∆°n h√†ng
    document.getElementById("orderDate").textContent = new Date(
      order.orderInfo?.orderDate || order.orderInfo?.createdAt
    ).toLocaleDateString("vi-VN");
    document.getElementById("orderTotal").textContent = order.orderInfo
      ?.totalAmount
      ? order.orderInfo.totalAmount.toLocaleString("vi-VN") + "‚Ç´"
      : "0‚Ç´";

    // Hi·ªÉn th·ªã ph∆∞∆°ng th·ª©c thanh to√°n n·∫øu c√≥
    if (order.orderInfo?.paymentMethod) {
      const paymentMethodText =
        order.orderInfo.paymentMethod === "online"
          ? "Thanh to√°n online"
          : order.orderInfo.paymentMethod === "cod"
          ? "Thanh to√°n khi nh·∫≠n h√†ng"
          : order.orderInfo.paymentMethod;

      // Th√™m d√≤ng hi·ªÉn th·ªã ph∆∞∆°ng th·ª©c thanh to√°n n·∫øu c√≥ ph·∫ßn t·ª≠
      const orderStatusElement = document.getElementById("orderStatus");
      if (orderStatusElement && orderStatusElement.parentElement) {
        // Ki·ªÉm tra xem ƒë√£ c√≥ ph·∫ßn t·ª≠ payment method ch∆∞a
        const existingPaymentMethod =
          orderStatusElement.parentElement.querySelector(
            "[data-payment-method]"
          );
        if (!existingPaymentMethod) {
          const paymentMethodElement = document.createElement("p");
          paymentMethodElement.setAttribute("data-payment-method", "true");
          paymentMethodElement.innerHTML = `<strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> <span>${paymentMethodText}</span>`;
          orderStatusElement.parentElement.insertBefore(
            paymentMethodElement,
            orderStatusElement.nextSibling
          );
        } else {
          existingPaymentMethod.innerHTML = `<strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> <span>${paymentMethodText}</span>`;
        }
      }
    }

    // Ki·ªÉm tra n·∫øu c√≥ items (s·∫£n ph·∫©m) trong order
    if (order.items && Array.isArray(order.items)) {
      document.getElementById("orderProducts").innerHTML = order.items
        .map(
          (item) => `
          <tr>
            <td>
              ${item.title} (${item.author || "N/A"})
              ${item.ISBN ? `<br><small>ISBN: ${item.ISBN}</small>` : ""}
            </td>
            <td>${item.quantity}</td>
            <td>${item.price.toLocaleString("vi-VN")}‚Ç´</td>
          </tr>
        `
        )
        .join("");
    } else {
      document.getElementById("orderProducts").innerHTML =
        '<tr><td colspan="3">Kh√¥ng c√≥ th√¥ng tin s·∫£n ph·∫©m</td></tr>';
    }

    const statusText = {
      unresolved: "Ch∆∞a gi·∫£i quy·∫øt",
      pending: "ƒêang x·ª≠ l√Ω",
      shipping: "ƒêang giao",
      delivered: "ƒê√£ giao",
      cancelled: "ƒê√£ h·ªßy",
    };

    const currentStatus = order.orderInfo?.status || "pending";
    document.getElementById("orderStatusSelect").value = currentStatus;
    document.getElementById("orderStatus").textContent =
      statusText[currentStatus] || "ƒêang x·ª≠ l√Ω";
  } catch (error) {
    console.error("L·ªói khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng:", error);
    // Fallback v·ªÅ d·ªØ li·ªáu hi·ªán c√≥ trong b·∫£ng
    const order = ordersData.find((o) => o.id === orderId);

    if (order) {
      const statusText = {
        unresolved: "Ch∆∞a gi·∫£i quy·∫øt",
        pending: "ƒêang x·ª≠ l√Ω",
        shipping: "ƒêang giao",
        delivered: "ƒê√£ giao",
        cancelled: "ƒê√£ h·ªßy",
      };

      document.getElementById("orderCode").textContent = `#${order.id.slice(
        -5
      )}`;

      // Ki·ªÉm tra xem d·ªØ li·ªáu c√≥ theo c·∫•u tr√∫c m·ªõi kh√¥ng
      if (order.customerInfo) {
        document.getElementById("orderCustomer").textContent =
          order.customerInfo.name || "Kh√¥ng x√°c ƒë·ªãnh";
        document.getElementById("orderEmail").textContent =
          order.customerInfo.email || "Ch∆∞a c√≥ email";
        document.getElementById("orderPhone").textContent =
          order.customerInfo.phoneNumber || "Ch∆∞a c√≥ s·ªë ƒëi·ªán tho·∫°i";
        document.getElementById("orderAddress").textContent =
          order.orderInfo?.shippingAddress ||
          order.customerInfo.address ||
          "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ";
        document.getElementById("orderDate").textContent = new Date(
          order.orderInfo?.createdAt
        ).toLocaleDateString("vi-VN");
        document.getElementById("orderTotal").textContent =
          order.orderInfo?.totalAmount.toLocaleString("vi-VN") + "‚Ç´";
        const currentStatus = order.orderInfo?.status || "pending";
        document.getElementById("orderStatusSelect").value = currentStatus;
        document.getElementById("orderStatus").textContent =
          statusText[currentStatus] || "ƒêang x·ª≠ l√Ω";
      } else {
        // C·∫•u tr√∫c d·ªØ li·ªáu c≈©
        document.getElementById("orderCustomer").textContent =
          order.customerName || "Kh√¥ng x√°c ƒë·ªãnh";
        document.getElementById("orderEmail").textContent =
          order.customerEmail || "Ch∆∞a c√≥ email";
        document.getElementById("orderPhone").textContent =
          order.phone || "Ch∆∞a c√≥ s·ªë ƒëi·ªán tho·∫°i";
        document.getElementById("orderAddress").textContent =
          order.address || "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ";
        document.getElementById("orderDate").textContent = new Date(
          order.createdAt
        ).toLocaleDateString("vi-VN");
        document.getElementById("orderTotal").textContent =
          order.totalAmount.toLocaleString("vi-VN") + "‚Ç´";
        const currentStatus = order.status || "pending";
        document.getElementById("orderStatusSelect").value = currentStatus;
        document.getElementById("orderStatus").textContent =
          statusText[currentStatus] || "ƒêang x·ª≠ l√Ω";
      }

      document.getElementById("orderProducts").innerHTML =
        '<tr><td colspan="3">Kh√¥ng c√≥ th√¥ng tin s·∫£n ph·∫©m chi ti·∫øt</td></tr>';
    } else {
      document.getElementById("orderCustomer").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderEmail").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderPhone").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderAddress").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderDate").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderTotal").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderStatus").textContent =
        "Kh√¥ng t√¨m th·∫•y th√¥ng tin";
      document.getElementById("orderProducts").innerHTML =
        '<tr><td colspan="3">Kh√¥ng t√¨m th·∫•y th√¥ng tin s·∫£n ph·∫©m</td></tr>';

      alert("Kh√¥ng t√¨m th·∫•y th√¥ng tin ƒë∆°n h√†ng!");
    }
  }
}
// G√°n h√†m cho window ƒë·ªÉ c√≥ th·ªÉ g·ªçi t·ª´ HTML
window.showOrderDetail = showOrderDetail;

// H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng (PUT /orders/{id})
async function updateOrderStatus() {
  const orderCode = document.getElementById("orderCode").textContent;
  // L·∫•y ID ƒë·∫ßy ƒë·ªß t·ª´ ordersData thay v√¨ ch·ªâ c·∫Øt m√£ ƒë∆°n h√†ng
  const shortId = orderCode.replace("#", "");

  // T√¨m ƒë∆°n h√†ng ƒë·∫ßy ƒë·ªß t·ª´ d·ªØ li·ªáu ƒë√£ l∆∞u
  const orderItem = ordersData.find((order) => order.id.slice(-5) === shortId);

  if (!orderItem) {
    alert("Kh√¥ng t√¨m th·∫•y th√¥ng tin ƒë∆°n h√†ng!");
    return;
  }

  const orderId = orderItem.id; // S·ª≠ d·ª•ng ID ƒë·∫ßy ƒë·ªß
  const status = document.getElementById("orderStatusSelect").value;
  const statusText = {
    unresolved: "Ch∆∞a gi·∫£i quy·∫øt",
    pending: "ƒêang x·ª≠ l√Ω",
    shipping: "ƒêang giao",
    delivered: "ƒê√£ giao",
    cancelled: "ƒê√£ h·ªßy",
  }[status];

  try {
    console.log(`C·∫≠p nh·∫≠t ƒë∆°n h√†ng v·ªõi ID ƒë·∫ßy ƒë·ªß: ${orderId}`);

    // Tr∆∞·ªõc ti√™n, l·∫•y th√¥ng tin chi ti·∫øt ƒë∆°n h√†ng hi·ªán t·∫°i t·ª´ API
    // const getResponse = await fetch(
    //   `https://tiemsachnhaem-be-mu.vercel.app/api/orders/${orderId}`,
    //   {
    //     method: "GET",
    //     headers: {
    //       "Content-Type": "application/json",
    //     },
    //   }
    // );

    // if (!getResponse.ok) {
    //   throw new Error(
    //     `L·ªói khi l·∫•y th√¥ng tin ƒë∆°n h√†ng: ${getResponse.status} - ${getResponse.statusText}`
    //   );
    // }

    // const currentOrder = await getResponse.json();
    // console.log("D·ªØ li·ªáu ƒë∆°n h√†ng tr∆∞·ªõc khi c·∫≠p nh·∫≠t:", currentOrder);

    // // Chu·∫©n b·ªã d·ªØ li·ªáu c·∫≠p nh·∫≠t
    // let updatedOrderData;

    // // Ki·ªÉm tra c·∫•u tr√∫c d·ªØ li·ªáu m·ªõi
    // if (currentOrder.orderInfo) {
    //   // C·∫•u tr√∫c d·ªØ li·ªáu m·ªõi
    //   updatedOrderData = {
    //     ...currentOrder,
    //     orderInfo: {
    //       ...currentOrder.orderInfo,
    //       status: status, // Ch·ªâ c·∫≠p nh·∫≠t tr·∫°ng th√°i
    //     },
    //   };
    // } else {
    //   // C·∫•u tr√∫c d·ªØ li·ªáu c≈©
    //   updatedOrderData = {
    //     ...currentOrder,
    //     status: status,
    //   };
    // }

    // console.log("D·ªØ li·ªáu ƒë∆°n h√†ng s·∫Ω g·ª≠i ƒë·ªÉ c·∫≠p nh·∫≠t:", updatedOrderData);

    // G·ªçi API PUT /orders/{id}
    const response = await fetch(
      `https://tiemsachnhaem-be-mu.vercel.app/api/orders/${orderId}`,
      {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ status: status }),
      }
    );

    if (!response.ok) {
      throw new Error(
        `L·ªói khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng: ${response.status} - ${response.statusText}`
      );
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i tr√™n b·∫£ng ch√≠nh
    const statusElement = document.getElementById(`status${shortId}`);
    if (statusElement) {
      statusElement.textContent = statusText;
      statusElement.className = `badge rounded-pill status-${status}`;
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i trong modal
    document.getElementById("orderStatus").textContent = statusText;

    // Hi·ªÉn th·ªã popup th√†nh c√¥ng
    document.getElementById("successTitle").textContent =
      "C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng";
    document.getElementById(
      "successMessage"
    ).textContent = `Tr·∫°ng th√°i ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh: ${statusText}`;
    const popup = document.getElementById("successOverlay");
    popup.style.display = "flex";

    // ƒê√≥ng modal chi ti·∫øt ƒë∆°n h√†ng
    const modalElement = document.getElementById("orderModal");
    const modalInstance = bootstrap.Modal.getInstance(modalElement);
    modalInstance.hide();

    // L√†m m·ªõi danh s√°ch ƒë∆°n h√†ng
    await fetchOrders();
  } catch (error) {
    console.error("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng:", error);
    alert("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t ƒë∆°n h√†ng. L·ªói: " + error.message);
  }
}
// G√°n h√†m cho window ƒë·ªÉ c√≥ th·ªÉ g·ªçi t·ª´ HTML
window.updateOrderStatus = updateOrderStatus;

function closeSuccessPopup(event) {
  const popup = document.getElementById("successOverlay");
  if (event && !event.target.closest(".success-popup")) {
    popup.style.display = "none";
  } else if (!event) {
    popup.style.display = "none";
  }
}
// G√°n h√†m cho window ƒë·ªÉ c√≥ th·ªÉ g·ªçi t·ª´ HTML
window.closeSuccessPopup = closeSuccessPopup;

// Kh·ªüi t·∫°o khi trang t·∫£i
document.addEventListener("DOMContentLoaded", function () {
  const popup = document.getElementById("successOverlay");
  popup.style.display = "none";
  fetchOrders(); // G·ªçi API khi trang t·∫£i
});

function toggleSidebar() {
  const sidebar = document.querySelector(".sidebar");
  sidebar.classList.toggle("active");
}
